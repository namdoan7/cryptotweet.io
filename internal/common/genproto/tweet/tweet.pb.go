// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: tweet.proto

package tweet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TranslateText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vietnamese string `protobuf:"bytes,1,opt,name=vietnamese,proto3" json:"vietnamese,omitempty"`
	Russian    string `protobuf:"bytes,2,opt,name=russian,proto3" json:"russian,omitempty"`
}

func (x *TranslateText) Reset() {
	*x = TranslateText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslateText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslateText) ProtoMessage() {}

func (x *TranslateText) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslateText.ProtoReflect.Descriptor instead.
func (*TranslateText) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{0}
}

func (x *TranslateText) GetVietnamese() string {
	if x != nil {
		return x.Vietnamese
	}
	return ""
}

func (x *TranslateText) GetRussian() string {
	if x != nil {
		return x.Russian
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices     []uint32 `protobuf:"varint,1,rep,packed,name=indices,proto3" json:"indices,omitempty"`
	Text        string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Url         string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	DisplayUrl  string   `protobuf:"bytes,4,opt,name=display_url,json=displayUrl,proto3" json:"display_url,omitempty"`
	ExpandedUrl string   `protobuf:"bytes,5,opt,name=expanded_url,json=expandedUrl,proto3" json:"expanded_url,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{1}
}

func (x *Entity) GetIndices() []uint32 {
	if x != nil {
		return x.Indices
	}
	return nil
}

func (x *Entity) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Entity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Entity) GetDisplayUrl() string {
	if x != nil {
		return x.DisplayUrl
	}
	return ""
}

func (x *Entity) GetExpandedUrl() string {
	if x != nil {
		return x.ExpandedUrl
	}
	return ""
}

type Entities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashtags     []*Entity `protobuf:"bytes,1,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	Symbols      []*Entity `protobuf:"bytes,2,rep,name=symbols,proto3" json:"symbols,omitempty"`
	Media        []*Entity `protobuf:"bytes,3,rep,name=media,proto3" json:"media,omitempty"`
	Urls         []*Entity `protobuf:"bytes,4,rep,name=urls,proto3" json:"urls,omitempty"`
	UserMentions []*Entity `protobuf:"bytes,5,rep,name=user_mentions,json=userMentions,proto3" json:"user_mentions,omitempty"`
}

func (x *Entities) Reset() {
	*x = Entities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entities) ProtoMessage() {}

func (x *Entities) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entities.ProtoReflect.Descriptor instead.
func (*Entities) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{2}
}

func (x *Entities) GetHashtags() []*Entity {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *Entities) GetSymbols() []*Entity {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *Entities) GetMedia() []*Entity {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Entities) GetUrls() []*Entity {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Entities) GetUserMentions() []*Entity {
	if x != nil {
		return x.UserMentions
	}
	return nil
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width       uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height      uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	ExpandedUrl string `protobuf:"bytes,4,opt,name=expanded_url,json=expandedUrl,proto3" json:"expanded_url,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{3}
}

func (x *Photo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Photo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Photo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Photo) GetExpandedUrl() string {
	if x != nil {
		return x.ExpandedUrl
	}
	return ""
}

type Tweet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TweetId              string                 `protobuf:"bytes,2,opt,name=tweet_id,json=tweetId,proto3" json:"tweet_id,omitempty"`
	TwitterProfileId     string                 `protobuf:"bytes,3,opt,name=twitter_profile_id,json=twitterProfileId,proto3" json:"twitter_profile_id,omitempty"`
	Text                 string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	TranslateText        *TranslateText         `protobuf:"bytes,10,opt,name=translate_text,json=translateText,proto3" json:"translate_text,omitempty"`
	FavoriteCount        int32                  `protobuf:"varint,5,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"`
	ConversationCount    int32                  `protobuf:"varint,6,opt,name=conversation_count,json=conversationCount,proto3" json:"conversation_count,omitempty"`
	Lang                 string                 `protobuf:"bytes,16,opt,name=lang,proto3" json:"lang,omitempty"`
	Parent               *Tweet                 `protobuf:"bytes,17,opt,name=parent,proto3" json:"parent,omitempty"`
	Photos               []*Photo               `protobuf:"bytes,18,rep,name=photos,proto3" json:"photos,omitempty"`
	Entities             *Entities              `protobuf:"bytes,19,opt,name=entities,proto3" json:"entities,omitempty"`
	InReplyToScreenName  string                 `protobuf:"bytes,20,opt,name=in_reply_to_screen_name,json=inReplyToScreenName,proto3" json:"in_reply_to_screen_name,omitempty"`
	InReplyToStatusIdStr string                 `protobuf:"bytes,21,opt,name=in_reply_to_status_id_str,json=inReplyToStatusIdStr,proto3" json:"in_reply_to_status_id_str,omitempty"`
	InReplyToUserIdStr   string                 `protobuf:"bytes,22,opt,name=in_reply_to_user_id_str,json=inReplyToUserIdStr,proto3" json:"in_reply_to_user_id_str,omitempty"`
	TweetedAt            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=tweeted_at,json=tweetedAt,proto3" json:"tweeted_at,omitempty"`
	PublishedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Tweet) Reset() {
	*x = Tweet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tweet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tweet) ProtoMessage() {}

func (x *Tweet) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tweet.ProtoReflect.Descriptor instead.
func (*Tweet) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{4}
}

func (x *Tweet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tweet) GetTweetId() string {
	if x != nil {
		return x.TweetId
	}
	return ""
}

func (x *Tweet) GetTwitterProfileId() string {
	if x != nil {
		return x.TwitterProfileId
	}
	return ""
}

func (x *Tweet) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Tweet) GetTranslateText() *TranslateText {
	if x != nil {
		return x.TranslateText
	}
	return nil
}

func (x *Tweet) GetFavoriteCount() int32 {
	if x != nil {
		return x.FavoriteCount
	}
	return 0
}

func (x *Tweet) GetConversationCount() int32 {
	if x != nil {
		return x.ConversationCount
	}
	return 0
}

func (x *Tweet) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Tweet) GetParent() *Tweet {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Tweet) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Tweet) GetEntities() *Entities {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Tweet) GetInReplyToScreenName() string {
	if x != nil {
		return x.InReplyToScreenName
	}
	return ""
}

func (x *Tweet) GetInReplyToStatusIdStr() string {
	if x != nil {
		return x.InReplyToStatusIdStr
	}
	return ""
}

func (x *Tweet) GetInReplyToUserIdStr() string {
	if x != nil {
		return x.InReplyToUserIdStr
	}
	return ""
}

func (x *Tweet) GetTweetedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TweetedAt
	}
	return nil
}

func (x *Tweet) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Tweet) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListTweetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileId string `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListTweetsRequest) Reset() {
	*x = ListTweetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTweetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTweetsRequest) ProtoMessage() {}

func (x *ListTweetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTweetsRequest.ProtoReflect.Descriptor instead.
func (*ListTweetsRequest) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{5}
}

func (x *ListTweetsRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ListTweetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTweetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListTweetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweets        []*Tweet `protobuf:"bytes,1,rep,name=tweets,proto3" json:"tweets,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListTweetsResponse) Reset() {
	*x = ListTweetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTweetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTweetsResponse) ProtoMessage() {}

func (x *ListTweetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTweetsResponse.ProtoReflect.Descriptor instead.
func (*ListTweetsResponse) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{6}
}

func (x *ListTweetsResponse) GetTweets() []*Tweet {
	if x != nil {
		return x.Tweets
	}
	return nil
}

func (x *ListTweetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetTweetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TweetId string `protobuf:"bytes,1,opt,name=tweet_id,json=tweetId,proto3" json:"tweet_id,omitempty"`
}

func (x *GetTweetRequest) Reset() {
	*x = GetTweetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTweetRequest) ProtoMessage() {}

func (x *GetTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTweetRequest.ProtoReflect.Descriptor instead.
func (*GetTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{7}
}

func (x *GetTweetRequest) GetTweetId() string {
	if x != nil {
		return x.TweetId
	}
	return ""
}

type GetTweetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweet *Tweet `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
}

func (x *GetTweetResponse) Reset() {
	*x = GetTweetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTweetResponse) ProtoMessage() {}

func (x *GetTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTweetResponse.ProtoReflect.Descriptor instead.
func (*GetTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{8}
}

func (x *GetTweetResponse) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

type CreateTweetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweet *Tweet `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
}

func (x *CreateTweetRequest) Reset() {
	*x = CreateTweetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetRequest) ProtoMessage() {}

func (x *CreateTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetRequest.ProtoReflect.Descriptor instead.
func (*CreateTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTweetRequest) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

type CreateTweetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Tweet `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTweetResponse) Reset() {
	*x = CreateTweetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetResponse) ProtoMessage() {}

func (x *CreateTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetResponse.ProtoReflect.Descriptor instead.
func (*CreateTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTweetResponse) GetData() *Tweet {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTweetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweet      *Tweet                 `protobuf:"bytes,1,opt,name=tweet,proto3" json:"tweet,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateTweetRequest) Reset() {
	*x = UpdateTweetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTweetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetRequest) ProtoMessage() {}

func (x *UpdateTweetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetRequest.ProtoReflect.Descriptor instead.
func (*UpdateTweetRequest) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTweetRequest) GetTweet() *Tweet {
	if x != nil {
		return x.Tweet
	}
	return nil
}

func (x *UpdateTweetRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateTweetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTweetResponse) Reset() {
	*x = UpdateTweetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTweetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetResponse) ProtoMessage() {}

func (x *UpdateTweetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetResponse.ProtoReflect.Descriptor instead.
func (*UpdateTweetResponse) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTweetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_tweet_proto protoreflect.FileDescriptor

var file_tweet_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69,
	0x65, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x73, 0x73,
	0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x73, 0x73, 0x69,
	0x61, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x72,
	0x6c, 0x22, 0xda, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6a,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x65, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xed, 0x05, 0x0a, 0x05, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74,
	0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x17, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x19, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x12, 0x33, 0x0a, 0x17, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x53, 0x74, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x77, 0x65, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x77, 0x65, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6e, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x62, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2c,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x05, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x22, 0x37,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x05, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x25,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x94, 0x02, 0x0a, 0x0c, 0x54, 0x77, 0x65, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x74, 0x77, 0x65, 0x65,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x12, 0x19, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x76, 0x69, 0x6e,
	0x68, 0x6e, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x69, 0x6f, 0x2f, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x3b, 0x74, 0x77, 0x65, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tweet_proto_rawDescOnce sync.Once
	file_tweet_proto_rawDescData = file_tweet_proto_rawDesc
)

func file_tweet_proto_rawDescGZIP() []byte {
	file_tweet_proto_rawDescOnce.Do(func() {
		file_tweet_proto_rawDescData = protoimpl.X.CompressGZIP(file_tweet_proto_rawDescData)
	})
	return file_tweet_proto_rawDescData
}

var file_tweet_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tweet_proto_goTypes = []interface{}{
	(*TranslateText)(nil),         // 0: tweet.TranslateText
	(*Entity)(nil),                // 1: tweet.Entity
	(*Entities)(nil),              // 2: tweet.Entities
	(*Photo)(nil),                 // 3: tweet.Photo
	(*Tweet)(nil),                 // 4: tweet.Tweet
	(*ListTweetsRequest)(nil),     // 5: tweet.ListTweetsRequest
	(*ListTweetsResponse)(nil),    // 6: tweet.ListTweetsResponse
	(*GetTweetRequest)(nil),       // 7: tweet.GetTweetRequest
	(*GetTweetResponse)(nil),      // 8: tweet.GetTweetResponse
	(*CreateTweetRequest)(nil),    // 9: tweet.CreateTweetRequest
	(*CreateTweetResponse)(nil),   // 10: tweet.CreateTweetResponse
	(*UpdateTweetRequest)(nil),    // 11: tweet.UpdateTweetRequest
	(*UpdateTweetResponse)(nil),   // 12: tweet.UpdateTweetResponse
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 14: google.protobuf.FieldMask
}
var file_tweet_proto_depIdxs = []int32{
	1,  // 0: tweet.Entities.hashtags:type_name -> tweet.Entity
	1,  // 1: tweet.Entities.symbols:type_name -> tweet.Entity
	1,  // 2: tweet.Entities.media:type_name -> tweet.Entity
	1,  // 3: tweet.Entities.urls:type_name -> tweet.Entity
	1,  // 4: tweet.Entities.user_mentions:type_name -> tweet.Entity
	0,  // 5: tweet.Tweet.translate_text:type_name -> tweet.TranslateText
	4,  // 6: tweet.Tweet.parent:type_name -> tweet.Tweet
	3,  // 7: tweet.Tweet.photos:type_name -> tweet.Photo
	2,  // 8: tweet.Tweet.entities:type_name -> tweet.Entities
	13, // 9: tweet.Tweet.tweeted_at:type_name -> google.protobuf.Timestamp
	13, // 10: tweet.Tweet.published_at:type_name -> google.protobuf.Timestamp
	13, // 11: tweet.Tweet.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 12: tweet.ListTweetsResponse.tweets:type_name -> tweet.Tweet
	4,  // 13: tweet.GetTweetResponse.tweet:type_name -> tweet.Tweet
	4,  // 14: tweet.CreateTweetRequest.tweet:type_name -> tweet.Tweet
	4,  // 15: tweet.CreateTweetResponse.data:type_name -> tweet.Tweet
	4,  // 16: tweet.UpdateTweetRequest.tweet:type_name -> tweet.Tweet
	14, // 17: tweet.UpdateTweetRequest.update_mask:type_name -> google.protobuf.FieldMask
	5,  // 18: tweet.TweetService.ListTweets:input_type -> tweet.ListTweetsRequest
	7,  // 19: tweet.TweetService.GetTweet:input_type -> tweet.GetTweetRequest
	9,  // 20: tweet.TweetService.CreateTweet:input_type -> tweet.CreateTweetRequest
	11, // 21: tweet.TweetService.UpdateTweet:input_type -> tweet.UpdateTweetRequest
	6,  // 22: tweet.TweetService.ListTweets:output_type -> tweet.ListTweetsResponse
	8,  // 23: tweet.TweetService.GetTweet:output_type -> tweet.GetTweetResponse
	10, // 24: tweet.TweetService.CreateTweet:output_type -> tweet.CreateTweetResponse
	4,  // 25: tweet.TweetService.UpdateTweet:output_type -> tweet.Tweet
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_tweet_proto_init() }
func file_tweet_proto_init() {
	if File_tweet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tweet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslateText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tweet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTweetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTweetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTweetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTweetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTweetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTweetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTweetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTweetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tweet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tweet_proto_goTypes,
		DependencyIndexes: file_tweet_proto_depIdxs,
		MessageInfos:      file_tweet_proto_msgTypes,
	}.Build()
	File_tweet_proto = out.File
	file_tweet_proto_rawDesc = nil
	file_tweet_proto_goTypes = nil
	file_tweet_proto_depIdxs = nil
}
